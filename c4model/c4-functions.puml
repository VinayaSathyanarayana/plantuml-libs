@startuml

' layout

!procedure legend()
    legend right
    |=   |=Type|=   |=Type|
    |<$EXTERNAL_PERSON_COLOR_BG>| external person |<$EXTERNAL_SYSTEM_COLOR_BG>| external system |
    |<$PERSON_COLOR_BG>| person |<$SYSTEM_COLOR_BG>| system |
    |<$CONTAINER_COLOR_BG>| container |<$COMPONENT_COLOR_BG>| component |
    endlegend
!endprocedure

!procedure title($title, $subtitle="", $version="", $date="")
  !$s=$title
  !$s_d="Last modified: " + %date("yyyy-MM-dd'T'HH:mm:ss")
  !$s_v=""
  !if ($date)
    !$s_d="Last modified: " + $date
  !endif
  !if ($version)
    !$s_v=" | version: " + $version
  !endif
  !$s=$s_d + $s_v
  left header
  <color:black><size:16>$title</size></color>
  !if ($subtitle)
    <color:black><size:14>$subtitle</size></color>
  !endif
  <color:grey><size:12>$s</size></color>
  end header
!endprocedure

' Label

!procedure LabelName($name)
    <b><size:$NAME_FONT_SIZE>$name</size></b>
!endprocedure

!procedure LabelDesc($desc)
    <size:$DESC_FONT_SIZE>$desc</size>
!endprocedure

!procedure LabelType($type, $tech="")
    !if ($tech)
        <size:$TECH_FONT_SIZE>[$type: $tech]</size>
    !else
        <size:$TECH_FONT_SIZE>[$type]</size>
    !endif
!endprocedure

!procedure Label($name, $type, $desc, $tech)
    LabelName($name)
    !if ($type)
        LabelType($type, $tech)
    !endif
    !if ($desc)

        LabelDesc($desc)
    !endif
!endprocedure

' Element

!procedure Element($shape, $stereotype, $type, $id, $name, $desc="", $tech="")
    $shape $id <<$stereotype>> [
        Label($name, $type, $desc, $tech)
    ]
!endprocedure

!procedure Boundary($type, $id, $name)
    rectangle $id <<Boundary>> as "<b><size:$NAME_FONT_SIZE>$name</size></b>\n<size:$TECH_FONT_SIZE>[$type]</size>"
!endprocedure

' Enterprise

!procedure Enterprise($id, $name)
    Boundary("Enterprise", $id, $name)
!endprocedure

' Person

!procedure Person($id, $name, $desc="")
    Element("rectangle", "Person", "Person", $id, $name, $desc)
!endprocedure

!procedure ExternalPerson($id, $name, $desc="")
    Element("rectangle", "ExternalPerson", "Person", $id, $name, $desc)
!endprocedure

' Software System (internal vs external)

!procedure System($id, $name, $desc="")
    Element("rectangle", "System", "System", $id, $name, $desc)
!endprocedure

!procedure ExternalSystem($id, $name, $desc="")
    Element("rectangle", "ExternalSystem", "System", $id, $name, $desc)
!endprocedure

!procedure SystemBoundary($id, $name)
    Boundary("System", $id, $name)
!endprocedure

' Container

!procedure Container($id, $name, $desc="", $tech="")
    Element("rectangle", "Container", "Container", $id, $name, $desc, $tech)
!endprocedure

!procedure Database($id, $name, $desc="", $tech="")
    Element("database", "Container", "Container", $id, $name, $desc, $tech)
!endprocedure

!procedure ContainerBoundary($id, $name)
    Boundary("Container", $id, $name)
!endprocedure

' Component

!procedure Component($id, $name, $desc="", $tech="")
    Element("rectangle", "Component", "Component", $id, $name, $desc, $tech)
!endprocedure

' Relationship

!procedure Relationship($desc="", $tech="")
    !if ($desc) && ($tech)
        <b><size:$DESC_FONT_SIZE>$desc</size></b>\n<size:$TECH_FONT_SIZE>[$tech]</size>
    !elseif ($desc)
        <b><size:$DESC_FONT_SIZE>$desc</size></b>
    !else
        <size:$TECH_FONT_SIZE>[$tech]</size>
    !endif
!endprocedure

@enduml